{"version":3,"file":"static/js/669.95c2751a.chunk.js","mappings":"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","sources":["pages/Dashboard/Profile/Change.jsx"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useRef, useState } from \"react\";\nimport {\n  Alert,\n  Button,\n  Grid,\n  Paper,\n  Snackbar,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport clock from \"../../../assets/images/clock.webp\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  sendDataToResetPhone,\n  setAnswerVerify,\n  sendCode,\n} from \"../../../redux/reducers/auth\";\nimport { useNavigate } from \"react-router\";\nimport cookie from \"cookie_js\";\n\nconst Change = ({ setLoading }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { answer_verify } = useSelector(({ auth }) => auth);\n  const { editedAccountData } = useSelector(({ account }) => account);\n\n  const [count, setCount] = useState(30);\n  const [sended, setSended] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      code: \"\",\n    },\n\n    onSubmit: (values) => {\n      values.code = parseInt(values.code);\n      // setLoading(true);\n      dispatch(sendDataToResetPhone(values));\n    },\n  });\n\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    // hide linear progress\n    setLoading(false);\n\n    if (answer_verify.severity === 202) {\n      setTimeout(() => {\n        navigate(\"/dashboard/profile\");\n      }, 1000);\n    }\n  }, [answer_verify]);\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    setLoading(false);\n  }, [editedAccountData]);\n\n  useEffect(() => {\n    if (count > 0)\n      setTimeout(() => {\n        setCount(count - 1);\n      }, 1000);\n  });\n\n  const submitHandler = () => {\n    if (count === 0) {\n      dispatch(\n        sendCode({\n          type: 3,\n          phone: cookie.get(\"phone\"),\n        })\n      );\n      setSended(true);\n      setCount(30);\n    }\n  };\n\n  return (\n    <>\n      <Snackbar\n        open={answer_verify.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() =>\n          dispatch(\n            setAnswerVerify({\n              ...answer_verify,\n              open: false,\n            })\n          )\n        }\n      >\n        <Alert\n          severity={answer_verify.severity === 202 ? \"success\" : \"error\"}\n          variant=\"filled\"\n        >\n          {answer_verify.message && Object.values(answer_verify?.message)[0]}\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={sended}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() => setSended(false)}\n      >\n        <Alert severity={\"success\"} variant=\"filled\">\n          Успешно отправлено\n        </Alert>\n      </Snackbar>\n      <Box\n        component=\"section\"\n        display=\"flex\"\n        alignItems=\"center\"\n        height=\"100%\"\n        sx={{\n          justifyContent: { xs: \"center\", lg: \"start\" },\n        }}\n      >\n        <Paper\n          sx={{\n            position: \"relative\",\n            background: \"#FFFFFF\",\n            boxShadow: \"0px 4px 58px rgba(0, 0, 0, 0.15)\",\n            borderRadius: \"15px\",\n            maxWidth: 770,\n            width: \"100%\",\n            padding: {\n              xs: \"50px 16px 50px 16px\",\n              md: \"70px 0 70px 50px\",\n              lg: \"70px\",\n            },\n          }}\n        >\n          <Grid container wrap=\"nowrap\">\n            <Grid item lg={6}>\n              <Typography variant=\"h3\" sx={{ fontWeight: 400 }}>\n                Изменение номера\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                sx={{ fontWeight: 400, lineHeight: 1 }}\n                mb={4}\n                mt={1}\n              >\n                Для изменения вашего номера, мы выслали код на ваш номер,\n                введите в поле ниже\n              </Typography>\n              <Box component=\"form\" onSubmit={formik.handleSubmit}>\n                <TextField\n                  placeholder=\"Введите код\"\n                  fullWidth\n                  required\n                  name=\"code\"\n                  value={formik.values.code}\n                  onChange={formik.handleChange}\n                  variant=\"outlined\"\n                />\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  sx={{ mt: 2, width: \"100%\" }}\n                  size=\"large\"\n                  color=\"primary\"\n                >\n                  Изменить\n                </Button>\n              </Box>\n\n              <Typography variant=\"body2\" mt={3} onClick={submitHandler}>\n                Смс не пришло?{\" \"}\n                <span className={count == 0 ? \"link yellow\" : \"link disabled\"}>\n                  Выслать ещё раз\n                </span>{\" \"}\n                через {count} секунд\n              </Typography>\n            </Grid>\n            <Grid item lg={6} xs={0}>\n              <img src={clock} className={classes.img} alt=\"\" />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\nexport default Change;\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    width: \"100%\",\n    maxHeight: 355,\n\n    [theme.breakpoints.down(\"md\")]: {\n      position: \"absolute\",\n      width: 107,\n      top: -70,\n      right: 0,\n    },\n  },\n}));\n"],"names":["setLoading","classes","useStyles","dispatch","useDispatch","navigate","useNavigate","answer_verify","useSelector","auth","editedAccountData","account","useState","count","setCount","sended","setSended","formik","useFormik","initialValues","code","onSubmit","values","parseInt","sendDataToResetPhone","firstUpdate","useRef","useLayoutEffect","current","severity","setTimeout","useEffect","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","setAnswerVerify","variant","message","Object","component","display","alignItems","height","sx","justifyContent","xs","lg","position","background","boxShadow","borderRadius","maxWidth","width","padding","md","container","wrap","item","fontWeight","lineHeight","mb","mt","handleSubmit","placeholder","fullWidth","required","name","value","onChange","handleChange","type","size","color","onClick","sendCode","phone","cookie","className","src","clock","img","alt","makeStyles","theme","maxHeight","breakpoints","down","top","right"],"sourceRoot":""}