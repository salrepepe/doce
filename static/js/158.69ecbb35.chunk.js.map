{"version":3,"file":"static/js/158.69ecbb35.chunk.js","mappings":"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","sources":["pages/Calculator/index.jsx"],"sourcesContent":["/* eslint-disable eqeqeq */\nimport { Button, Container, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { DirectionForm, Size } from \"../../components/Forms\";\nimport {\n  getDeliveryTypes,\n  getEnvelopesByFilter,\n  getPackaging,\n  setOrderingData,\n} from \"../../redux/reducers/ordering\";\nimport Fourth from \"../Dashboard/Ordering/Fourth\";\nimport Third from \"../Dashboard/Ordering/Third\";\n\nconst Calculator = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [visbile, setVisible] = useState(false);\n\n  const { envelops_prices, delivery_types, packaging, route } = useSelector(\n    ({ ordering }) => ordering\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      from: \"\",\n      to: \"\",\n      delivery_type: \"\",\n      envelop: \"\",\n      packaging: \"\",\n      weight: \"\",\n      width: \"\",\n      height: \"\",\n      length: \"\",\n    },\n    onSubmit: (values) => {\n      const selectedEnvelop = envelops_prices.find(\n        (item) => item.title == values.envelop\n      );\n\n      // find selected delivery type for calculate price\n      const selectedDeliveryType = delivery_types.find(\n        (item) => item.title == values.delivery_type\n      );\n\n      // find selected packaging  for calculate price\n      const selectedPackaging = packaging.find(\n        (item) => item.title == values.packaging\n      );\n\n      if (\n        selectedEnvelop &&\n        formik.values.weight &&\n        formik.values.height &&\n        formik.values.length &&\n        formik.values.width &&\n        formik.values.amountForSize\n      ) {\n        formik.setFieldValue(\n          \"price\",\n          parseInt(formik.values.amountForSize) +\n            parseInt(selectedEnvelop?.price) +\n            parseInt(selectedDeliveryType?.price) +\n            parseInt(selectedPackaging?.price)\n        );\n      } else if (selectedEnvelop) {\n        formik.setFieldValue(\n          \"price\",\n          parseInt(selectedEnvelop?.price) +\n            parseInt(selectedDeliveryType?.price) +\n            parseInt(selectedPackaging?.price)\n        );\n      } else {\n        formik.setFieldValue(\n          \"price\",\n          parseInt(formik.values.amountForSize) +\n            parseInt(selectedDeliveryType.price) +\n            parseInt(selectedPackaging.price)\n        );\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (route.from) {\n      formik.setFieldValue(\"from\", route.from);\n      formik.setFieldValue(\"to\", route.to);\n      formik.setFieldValue(\"envelop\", route.envelop);\n      formik.setFieldValue(\"height\", route.height);\n      formik.setFieldValue(\"width\", route.width);\n      formik.setFieldValue(\"length\", route.length);\n      formik.setFieldValue(\"weight\", route.weight);\n    }\n    // eslint-disable-next-line\n  }, [route]);\n\n  useEffect(() => {\n    if (Array.isArray(envelops_prices)) {\n      if (\n        formik.values.weight &&\n        formik.values.height &&\n        formik.values.length &&\n        formik.values.width\n      ) {\n        formik.setFieldValue(\"envelop\", null);\n\n        const correctDimension = envelops_prices?.find(\n          (item) =>\n            item?.dimension?.length >= formik?.values?.length &&\n            item?.dimension?.height >= formik?.values?.height &&\n            item?.dimension?.width >= formik?.values?.width\n        );\n\n        if (correctDimension?.dimension?.weight < formik?.values?.weight) {\n          formik.setFieldValue(\n            \"amountForSize\",\n            correctDimension?.kilo *\n              (formik.values.weight - correctDimension?.dimension?.weight)\n          );\n        }\n\n        if (correctDimension) {\n          formik.setFieldValue(\"envelop\", correctDimension?.title);\n        } else {\n          const correctDimension = envelops_prices\n            ?.sort((a, b) => b.dimension.weight - a.dimension.weight)\n            ?.find(\n              (item) =>\n                item?.dimension?.length <= formik?.values?.length &&\n                item?.dimension?.height <= formik?.values?.height &&\n                item?.dimension?.width <= formik?.values?.width\n            );\n          formik.setFieldValue(\n            \"amountForSize\",\n            ((formik.values.length *\n              formik.values.width *\n              formik.values.height) /\n              1000000) *\n              1000 +\n              correctDimension?.kilo *\n                (formik.values.weight - correctDimension?.dimension?.weight) +\n              parseInt(correctDimension?.price)\n          );\n        }\n      }\n    }\n    if (\n      !formik.values.weight ||\n      !formik.values.height ||\n      !formik.values.length ||\n      !formik.values.width\n    ) {\n      formik.setFieldValue(\"envelop_label\", null);\n    }\n    // eslint-disable-next-line\n  }, [\n    formik.values.envelop,\n    formik.values.weight,\n    formik.values.height,\n    formik.values.length,\n    formik.values.width,\n  ]);\n\n  useEffect(() => {\n    dispatch(getDeliveryTypes());\n    dispatch(getPackaging());\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    setVisible(false);\n  }, [\n    formik.values.delivery_type,\n    formik.values.packaging,\n    formik.values.envelop,\n    formik.values.from,\n    formik.values.to,\n    formik.values.width,\n    formik.values.height,\n    formik.values.length,\n    formik.values.weight,\n  ]);\n\n  useEffect(() => {\n    // formik.setFieldValue(\"envelop\", null);\n  }, [formik.values.from, formik.values.to]);\n\n  useEffect(() => {\n    if (formik.values.from && formik.values.to)\n      dispatch(getEnvelopesByFilter(formik.values.from, formik.values.to));\n  }, [formik.values.to]);\n\n  return (\n    <section style={{ padding: \"80px 0\" }}>\n      <Container maxWidth=\"xl\">\n        <form onSubmit={formik.handleSubmit}>\n          <Typography\n            variant=\"h3\"\n            mb={5}\n            sx={{\n              fontSize: \"26px!important\",\n            }}\n          >\n            Онлайн калькулятор\n          </Typography>\n          <Typography variant=\"h5\" mb={2}>\n            Отправка груза\n          </Typography>\n          <DirectionForm formik={formik} calculator />\n          <Typography variant=\"h5\" className={classes.subtitle}>\n            Размеры груза\n          </Typography>\n          <Size formik={formik} open={open} setOpen={setOpen} />\n          <Typography variant=\"h5\" className={classes.subtitle}>\n            Тип доставки\n          </Typography>\n          <Third formik={formik} calculator />\n          <Typography variant=\"h5\" className={classes.subtitle}>\n            Выберите упаковку для груза\n          </Typography>\n          <Fourth formik={formik} calculator />\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setVisible(true);\n              formik.submitForm();\n            }}\n            disabled={\n              visbile ||\n              !formik.values.packaging ||\n              !formik.values.delivery_type\n            }\n            sx={{ mt: 5 }}\n            href=\"#price\"\n            size=\"large\"\n            color=\"primary\"\n          >\n            рассчитать\n          </Button>\n        </form>\n        {visbile && (\n          <div id=\"price\">\n            <Typography variant=\"h5\" className={classes.subtitle}>\n              Цена доставки груза: {formik.values.price} сом\n            </Typography>\n            <Button\n              variant=\"contained\"\n              sx={{ mt: 5 }}\n              onClick={() => {\n                navigate(\"/dashboard/ordering\");\n                dispatch(\n                  setOrderingData({\n                    ...formik.values,\n                    districtCode: formik.values.to,\n                  })\n                );\n              }}\n              size=\"large\"\n              color=\"primary\"\n            >\n              Заказать доставку\n            </Button>\n          </div>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Calculator;\n\nconst useStyles = makeStyles(() => ({\n  subtitle: {\n    borderTop: \"1px solid #C7C7C7\",\n    paddingTop: \"40px\",\n    marginTop: \"40px!important\",\n    marginBottom: \"20px!important\",\n  },\n}));\n"],"names":["classes","useStyles","navigate","useNavigate","dispatch","useDispatch","useState","open","setOpen","visbile","setVisible","useSelector","ordering","envelops_prices","delivery_types","packaging","route","formik","useFormik","initialValues","from","to","delivery_type","envelop","weight","width","height","length","onSubmit","values","selectedEnvelop","find","item","title","selectedDeliveryType","selectedPackaging","amountForSize","setFieldValue","parseInt","price","useEffect","Array","isArray","correctDimension","dimension","kilo","sort","a","b","getDeliveryTypes","getPackaging","getEnvelopesByFilter","style","padding","maxWidth","handleSubmit","variant","mb","sx","fontSize","calculator","className","subtitle","onClick","submitForm","disabled","mt","href","size","color","id","setOrderingData","districtCode","makeStyles","borderTop","paddingTop","marginTop","marginBottom"],"sourceRoot":""}